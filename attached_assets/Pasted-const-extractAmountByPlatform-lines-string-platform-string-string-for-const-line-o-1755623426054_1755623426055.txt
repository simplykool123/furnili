const extractAmountByPlatform = (lines: string[], platform: string): string => {
  for (const line of lines) {
    let amountMatch = null;
    
    switch (platform) {
      case 'googlepay':
        // Google Pay: "₹500", "Amount: ₹500", "Paid ₹500", "Rs 500", "Rs. 500"
        amountMatch = line.match(/(?:paid|amount|rs\.?|₹)?\s*₹?\s?([0-9,]+\.?[0-9]*)/i);
        // Also try to match standalone currency amounts
        if (!amountMatch) {
          amountMatch = line.match(/^₹?\s?([0-9,]+\.?[0-9]*)$/);
        }
        // Try Rs format commonly used in Google Pay
        if (!amountMatch) {
          amountMatch = line.match(/rs\.?\s?([0-9,]+\.?[0-9]*)/i);
        }
        break;
      case 'phonepe':
        // PhonePe: "₹500 sent", "Amount ₹500"
        amountMatch = line.match(/(?:amount|sent|paid)?\s*₹\s?([0-9,]+\.?[0-9]*)/i);
        break;
      case 'paytm':
        // Paytm: "₹500.00", "Amount: Rs 500"
        amountMatch = line.match(/(?:amount|rs|₹)\s?([0-9,]+\.?[0-9]*)/i);
        break;
      case 'cred':
        // CRED: Enhanced pattern matching with robust regex fallback
        amountMatch = line.match(/[₹¥]\s?([0-9,]+\.?[0-9]*)/);
        if (!amountMatch) {
          amountMatch = line.match(/(?:Rs\.?|INR)?\s?(\d{2,6})(?:\/-)?/i);
        }
        if (!amountMatch) {
          amountMatch = line.match(/^([0-9,]+\.?[0-9]*)$/);
        }
        break;
      case 'bank':
        // Bank: "Debited ₹500", "Amount: INR 500"
        amountMatch = line.match(/(?:debited|credited|amount|inr)\s*₹?\s?([0-9,]+\.?[0-9]*)/i);
        break;
      default:
        // Generic patterns - try multiple formats
        amountMatch = line.match(/₹\s?([0-9,]+\.?[0-9]*)/);
        if (!amountMatch) {
          amountMatch = line.match(/rs\.?\s?([0-9,]+\.?[0-9]*)/i);
        }
        if (!amountMatch) {
          amountMatch = line.match(/^([0-9,]+\.?[0-9]*)$/);
        }
    }

    if (amountMatch) {
      const amount = parseFloat(amountMatch[1].replace(/,/g, ''));
      // Validate reasonable amount range
      if (amount >= 1 && amount <= 100000) {
        return amountMatch[1].replace(/,/g, '');
      }
    }
  }
  return '';
};
